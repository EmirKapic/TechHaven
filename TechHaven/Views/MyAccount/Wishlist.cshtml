@model IEnumerable<Product>
@using TechHaven.Services
@inject ImageFactory _imageFactory;
<div class="container container-fluid">
    <div class="row mt-3">

        <partial name="_MyAccMenu" />

		<div class="col-md-9">
            <h3 class="text-center mt-3">Wishlist</h3>
            <hr />

			<div class="table-responsive">
				<table class="table table-hover align-middle">
					<thead>
						<tr>
							<th scope="col">Product</th>
							<th scope="col">Price</th>
							<th scope="col"></th>
						</tr>
					</thead>
					<tbody class="table-group-divider">
						@foreach(var prod in Model)
						{
							var imgbase64 = (await _imageFactory.GetImage(prod.Category)).base64Content;
							<tr>
								<td scope="row">
									<a asp-controller="Products" asp-action="ProductDetails" asp-route-id="@prod.Id" class="text-decoration-none" style="color:black;">
										<img src="data:image/jpeg;base64,@imgbase64" class="prod-photo-md" loading="lazy" alt="...">
										<span class="ms-2">@prod.Manufacturer @prod.Model</span>
									</a>
								</td>
								<td>@prod.Price KM</td>
								<td>
									<span class="float-end">
										<a class="btn btn-primary commonBtn wishlist-add-button" onclick="AddToCart()">Add to cart</a>
										<a class="btn btn-danger commonBtn wishlist-add-button" onclick="RemoveFromFavorites()">Remove</a>
										<input id="remove-id" type="hidden" value="@prod.Id">
									</span>
								</td>
							</tr>			
						}	
					</tbody>
				</table>
			</div>
        </div>
    </div>
</div>

<script>

	async function RemoveFromFavorites(){
		const tableRow = event.target.parentNode.parentNode.parentNode;
		tableRow.parentNode.removeChild(tableRow);

		const td = event.target.parentNode;

		const prodId = td.querySelector('#remove-id').value;

		const parameters = new URLSearchParams();
		parameters.append("id", prodId.toString());

		const url = "/MyAccount/DropFromFavorites?" + parameters.toString();
		const result = await fetch(url)
			.then(response => response.json());

		console.log(result);
		window.location.reload();
	}

	async function AddToCart(){
		const td = event.target.parentNode;
		const prodId = td.querySelector('#remove-id').value;

		const parameters = new URLSearchParams();
		parameters.append("id", prodId.toString());
		const url = "/Products/AddToCart?" + parameters.toString();
		const result = await fetch(url)
			.then(response => response.json());

		console.log(result);
	}


</script>